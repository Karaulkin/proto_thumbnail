// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.21.12
// source: thumbnail/thumbnail.proto

package thumbnailv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ThumbnailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoUrl string `protobuf:"bytes,1,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`
}

func (x *ThumbnailRequest) Reset() {
	*x = ThumbnailRequest{}
	mi := &file_thumbnail_thumbnail_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThumbnailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThumbnailRequest) ProtoMessage() {}

func (x *ThumbnailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thumbnail_thumbnail_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThumbnailRequest.ProtoReflect.Descriptor instead.
func (*ThumbnailRequest) Descriptor() ([]byte, []int) {
	return file_thumbnail_thumbnail_proto_rawDescGZIP(), []int{0}
}

func (x *ThumbnailRequest) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

type ThumbnailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageData []byte `protobuf:"bytes,1,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"` // Превью видео в виде байт
	CachedAt  string `protobuf:"bytes,2,opt,name=cached_at,json=cachedAt,proto3" json:"cached_at,omitempty"`    // Время кэширования
}

func (x *ThumbnailResponse) Reset() {
	*x = ThumbnailResponse{}
	mi := &file_thumbnail_thumbnail_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThumbnailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThumbnailResponse) ProtoMessage() {}

func (x *ThumbnailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thumbnail_thumbnail_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThumbnailResponse.ProtoReflect.Descriptor instead.
func (*ThumbnailResponse) Descriptor() ([]byte, []int) {
	return file_thumbnail_thumbnail_proto_rawDescGZIP(), []int{1}
}

func (x *ThumbnailResponse) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *ThumbnailResponse) GetCachedAt() string {
	if x != nil {
		return x.CachedAt
	}
	return ""
}

type ClearCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	All  bool     `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`  // Флаг для очистки всего кэша
	Urls []string `protobuf:"bytes,2,rep,name=urls,proto3" json:"urls,omitempty"` // Список URL для частичной очистки
}

func (x *ClearCacheRequest) Reset() {
	*x = ClearCacheRequest{}
	mi := &file_thumbnail_thumbnail_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearCacheRequest) ProtoMessage() {}

func (x *ClearCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thumbnail_thumbnail_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearCacheRequest.ProtoReflect.Descriptor instead.
func (*ClearCacheRequest) Descriptor() ([]byte, []int) {
	return file_thumbnail_thumbnail_proto_rawDescGZIP(), []int{2}
}

func (x *ClearCacheRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *ClearCacheRequest) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

type ClearCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClearedCount int32 `protobuf:"varint,1,opt,name=cleared_count,json=clearedCount,proto3" json:"cleared_count,omitempty"` // Количество удалённых записей
}

func (x *ClearCacheResponse) Reset() {
	*x = ClearCacheResponse{}
	mi := &file_thumbnail_thumbnail_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearCacheResponse) ProtoMessage() {}

func (x *ClearCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thumbnail_thumbnail_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearCacheResponse.ProtoReflect.Descriptor instead.
func (*ClearCacheResponse) Descriptor() ([]byte, []int) {
	return file_thumbnail_thumbnail_proto_rawDescGZIP(), []int{3}
}

func (x *ClearCacheResponse) GetClearedCount() int32 {
	if x != nil {
		return x.ClearedCount
	}
	return 0
}

type ListCachedItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCachedItemsRequest) Reset() {
	*x = ListCachedItemsRequest{}
	mi := &file_thumbnail_thumbnail_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCachedItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCachedItemsRequest) ProtoMessage() {}

func (x *ListCachedItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thumbnail_thumbnail_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCachedItemsRequest.ProtoReflect.Descriptor instead.
func (*ListCachedItemsRequest) Descriptor() ([]byte, []int) {
	return file_thumbnail_thumbnail_proto_rawDescGZIP(), []int{4}
}

type ListCachedItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CachedItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // Список закэшированных объектов
}

func (x *ListCachedItemsResponse) Reset() {
	*x = ListCachedItemsResponse{}
	mi := &file_thumbnail_thumbnail_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCachedItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCachedItemsResponse) ProtoMessage() {}

func (x *ListCachedItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thumbnail_thumbnail_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCachedItemsResponse.ProtoReflect.Descriptor instead.
func (*ListCachedItemsResponse) Descriptor() ([]byte, []int) {
	return file_thumbnail_thumbnail_proto_rawDescGZIP(), []int{5}
}

func (x *ListCachedItemsResponse) GetItems() []*CachedItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type CachedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoUrl string `protobuf:"bytes,1,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"` // Ссылка на видео
	CachedAt string `protobuf:"bytes,2,opt,name=cached_at,json=cachedAt,proto3" json:"cached_at,omitempty"` // Время кэширования
	Size     int32  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                        // Размер данных в байтах
}

func (x *CachedItem) Reset() {
	*x = CachedItem{}
	mi := &file_thumbnail_thumbnail_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CachedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CachedItem) ProtoMessage() {}

func (x *CachedItem) ProtoReflect() protoreflect.Message {
	mi := &file_thumbnail_thumbnail_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CachedItem.ProtoReflect.Descriptor instead.
func (*CachedItem) Descriptor() ([]byte, []int) {
	return file_thumbnail_thumbnail_proto_rawDescGZIP(), []int{6}
}

func (x *CachedItem) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *CachedItem) GetCachedAt() string {
	if x != nil {
		return x.CachedAt
	}
	return ""
}

func (x *CachedItem) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_thumbnail_thumbnail_proto protoreflect.FileDescriptor

var file_thumbnail_thumbnail_proto_rawDesc = []byte{
	0x0a, 0x19, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x2f, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x22, 0x2f, 0x0a, 0x10, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x22, 0x4f, 0x0a, 0x11, 0x54, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x41, 0x74, 0x22, 0x39, 0x0a, 0x11, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x72, 0x6c, 0x73, 0x22, 0x39, 0x0a, 0x12, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x18,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x2e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x5a, 0x0a, 0x0a, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x32, 0xfb, 0x01, 0x0a,
	0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x49, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x2e, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x2e, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x12, 0x1c, 0x2e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x2e,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x21, 0x2e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x20, 0x5a, 0x1e, 0x6b, 0x61,
	0x74, 0x69, 0x6e, 0x61, 0x6b, 0x61, 0x2e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x3b, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_thumbnail_thumbnail_proto_rawDescOnce sync.Once
	file_thumbnail_thumbnail_proto_rawDescData = file_thumbnail_thumbnail_proto_rawDesc
)

func file_thumbnail_thumbnail_proto_rawDescGZIP() []byte {
	file_thumbnail_thumbnail_proto_rawDescOnce.Do(func() {
		file_thumbnail_thumbnail_proto_rawDescData = protoimpl.X.CompressGZIP(file_thumbnail_thumbnail_proto_rawDescData)
	})
	return file_thumbnail_thumbnail_proto_rawDescData
}

var file_thumbnail_thumbnail_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_thumbnail_thumbnail_proto_goTypes = []any{
	(*ThumbnailRequest)(nil),        // 0: thumbnail.ThumbnailRequest
	(*ThumbnailResponse)(nil),       // 1: thumbnail.ThumbnailResponse
	(*ClearCacheRequest)(nil),       // 2: thumbnail.ClearCacheRequest
	(*ClearCacheResponse)(nil),      // 3: thumbnail.ClearCacheResponse
	(*ListCachedItemsRequest)(nil),  // 4: thumbnail.ListCachedItemsRequest
	(*ListCachedItemsResponse)(nil), // 5: thumbnail.ListCachedItemsResponse
	(*CachedItem)(nil),              // 6: thumbnail.CachedItem
}
var file_thumbnail_thumbnail_proto_depIdxs = []int32{
	6, // 0: thumbnail.ListCachedItemsResponse.items:type_name -> thumbnail.CachedItem
	0, // 1: thumbnail.Thumbnail.GetThumbnail:input_type -> thumbnail.ThumbnailRequest
	2, // 2: thumbnail.Thumbnail.ClearCache:input_type -> thumbnail.ClearCacheRequest
	4, // 3: thumbnail.Thumbnail.ListCachedItems:input_type -> thumbnail.ListCachedItemsRequest
	1, // 4: thumbnail.Thumbnail.GetThumbnail:output_type -> thumbnail.ThumbnailResponse
	3, // 5: thumbnail.Thumbnail.ClearCache:output_type -> thumbnail.ClearCacheResponse
	5, // 6: thumbnail.Thumbnail.ListCachedItems:output_type -> thumbnail.ListCachedItemsResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_thumbnail_thumbnail_proto_init() }
func file_thumbnail_thumbnail_proto_init() {
	if File_thumbnail_thumbnail_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_thumbnail_thumbnail_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_thumbnail_thumbnail_proto_goTypes,
		DependencyIndexes: file_thumbnail_thumbnail_proto_depIdxs,
		MessageInfos:      file_thumbnail_thumbnail_proto_msgTypes,
	}.Build()
	File_thumbnail_thumbnail_proto = out.File
	file_thumbnail_thumbnail_proto_rawDesc = nil
	file_thumbnail_thumbnail_proto_goTypes = nil
	file_thumbnail_thumbnail_proto_depIdxs = nil
}
